/** Arduino-Esp32-CAM                                            *** Echo.h ***
 * 
 *                   Обеспечить руссифицированное ведение журнала приложения на 
 *                             ОLED-дисплее SSD1306 128x64 на ESP32 (ESP32-CAM) 
 *                                   c программным переопределением выводов I2С
 *            и параллельное дублирование строк журнала в последовательный порт
 *                                  
 * Используются:     #include <Adafruit_GFX.h> (с руссифицированным glcdfont.c)
 *                   #include <Adafruit_SSD1306.h>
 * 
 * v1.0.4, 19.02.2025                                 Автор:      Труфанов В.Е.
 * Copyright © 2025 tve                               Дата создания: 15.02.2025
 * 
 * I2C — это двунаправленный последовательный протокол передачи данных на короткие 
 * расстояния, который использует две линии: последовательную линию данных (SDA) 
 * и последовательную линию синхронизации (SCL). Разработан фирмой Philips 
 * Semiconductors в начале 1980-х, как простая 8-битная шина внутренней связи 
 * для создания управляющей электроники. Была рассчитана на частоту 100 кГц.
 * 
 * Стандартизован в 1992 году, к стандартному режиму 100 кбит/с добавлен скоростной 
 * режим 400 кбит/с (Fast-mode, Fm). Позволяет подключить на одну шину более 1000 
 * устройств, количество которых ограничивается допустимой ёмкостью шины — 400 пФ.
 * 
 * В стандарте версии 2.0 (1998 год) представлены высокоскоростной режим работы 3,4 Мбит/с 
 * (High-speed mode, Hs) и требования пониженного энергопотребления. 
 * 
 * В версии 3 (2007 год) добавлен режим 1 Мбит/с (Fast-mode plus, Fm+) и механизм 
 * идентификации устройств (ID).
 * 
**/

#pragma once     
#include "Arduino.h"

#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

// Размер текста в сообщениях
#define SmallText      1          // мелкий текст
#define PlainText      2          // обычный текст 
#define modeTextSize   PlainText
#ifdef modeTextSize  = PlainText
   #define nLine       4          // число строк дисплея
   #define nColm       10         // число столбцов дисплея
   #define nOffset     16         // смещение в пикселах по строкам
#endif
// Способ движения строк по экрану дисплея
#define TopToBottom    1          // сверху-вниз   
#define FromBottomTop  2          // снизу-вверх   

class TEcho
{
  public:

  // Построить объект (конструктор класса)
  TEcho(int iI2C_SDA=14, int iI2C_SCL=13, int iSCREEN_ADDRESS=0x3C, int imodeI2C=100000, int imodeSerial=115200);
  // Вывести строку журнала
  void out(String str);
  // Изменить направление движения строк
  void ChangeLinesDir(int Direction);
   
  private:
   
  bool isFirst;                    // true - вывод первой строки на дисплей
  bool isSuccess;                  // true - успешно инициализирован дисплей
  int I2C_SDA;                     // "serial data" - линия последовательных данных
  int I2C_SCL;                     // "serial clock" - линия последовательного тактирования
  TwoWire I2Cbus = TwoWire(0);     // объект для работы с шиной I2C
  int SCREEN_WIDTH = 128;          // размер дисплея в пикселах по ширине
  int SCREEN_HEIGHT = 64;          // размер дисплея в пикселах по высоте
  int OLED_RESET = -1;             // вывод сброса дисплея
  int SCREEN_ADDRESS;              // адрес дисплея на шине I2C
  int WayLinesMove=FromBottomTop;  // направление движения строк
  int modeI2C;                     // частота шины внутренней связи I2C
  int modeSerial;                  // частота передачи через последовательный порт
  char myText[nLine][nColm+1];     // буфер показываемых строк журнала

  Adafruit_SSD1306 dispi;          // объект дисплея с параметрами экрана по заданному адресу на шине I2C

  // Инициировать ведение журнала на Oled-дисплее
  void Init();
  // Показать массив 
  void ViewArray();
  // Перекодировать русские буквы из UTF-8 в Win-1251
  String utf8rus(String source);
};

// ***************************************************************** Echo.h ***
